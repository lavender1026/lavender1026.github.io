<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[收藏的博客]]></title>
      <url>http://lavender1026.github.io/2016/03/17/%E6%94%B6%E8%97%8F%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
      <content type="html"><![CDATA[<p>整理一下自己看过的精品博客以及网站，都是质量不错的博客</p>
<h2 id="推荐博客"><a href="#推荐博客" class="headerlink" title="推荐博客"></a>推荐博客</h2><ul>
<li><a href="http://www.henishuo.com/" target="_blank" rel="external">标哥的技术博客</a> </li>
<li><a href="http://blog.devtang.com/" target="_blank" rel="external">唐巧的博客</a> </li>
<li><a href="http://blog.ibireme.com/" target="_blank" rel="external">ibireme的博客</a></li>
<li><a href="https://onevcat.com/" target="_blank" rel="external">喵神博客</a></li>
<li><a href="http://blog.sunnyxx.com/" target="_blank" rel="external">sunnyxx的博客</a> </li>
<li><a href="http://blog.leichunfeng.com/" target="_blank" rel="external">雷纯锋的技术博客</a></li>
<li><a href="http://swift.gg/" target="_blank" rel="external">SwiftGG 翻译组 - 高质量的 Swift 译文网站</a></li>
<li><a href="http://swifter.tips/" target="_blank" rel="external">Swifter - 100 个 Swift 必备 tips</a> </li>
<li><a href="http://objccn.io/" target="_blank" rel="external">objc中国</a> | 内容丰富的OC学习网站，虽然现已停刊，但是里面的内容仍值得拜读</li>
<li><a href="http://tech.meituan.com/" target="_blank" rel="external">美团点评技术团队</a> | 经常分享一些干货知识 </li>
<li><a href="http://nshipster.cn/" target="_blank" rel="external">NSHipster 中文</a></li>
<li><a href="http://www.ios-wiki.com/" target="_blank" rel="external">iOS wiki</a> | 包含技术周报、好文章 、iOS 安全</li>
<li><a href="http://www.jianshu.com/users/b82d2721ba07/latest_articles" target="_blank" rel="external">叶孤城_ - 简书</a></li>
<li><a href="http://southpeak.github.io/" target="_blank" rel="external">南峰子的技术博客</a></li>
<li><a href="http://tutuge.me/" target="_blank" rel="external">土土哥的技术 Blog</a></li>
<li><a href="http://beyondvincent.com/" target="_blank" rel="external">破船之家</a></li>
<li><a href="http://app.memect.com/" target="_blank" rel="external">APP日报</a></li>
<li><a href="http://yulingtianxia.com/" target="_blank" rel="external">玉令天下的博客</a></li>
<li><a href="https://bestswifter.com/" target="_blank" rel="external">bestswifter的博客</a></li>
<li><a href="http://lastdays.cn/" target="_blank" rel="external">LastDays的博客</a></li>
<li><a href="http://www.jianshu.com/users/40e4dced948f/latest_articles" target="_blank" rel="external">kuailejim</a> | wujim</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Debug小宝典]]></title>
      <url>http://lavender1026.github.io/2016/02/20/Debug%E5%B0%8F%E5%AE%9D%E5%85%B8/</url>
      <content type="html"><![CDATA[<h2 id="0"><a href="#0" class="headerlink" title="0"></a>0</h2><p>崩溃报错有时会直接蹦在UIApplicationMain()或者UIApplicationDelegate()这些初始方法中，而LOG中的报错的原因也仅仅是数组越界问题。</p>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p>0.<a href="http://weibo.com/1745945040/CpBv73dSR?type=comment#_rnd1436172574844" target="_blank" rel="external">戴铭</a><br><a href="http://meilbn.com/2015/07/06/iOS-Xcode-Debug-Skills-0x00/#comments" target="_blank" rel="external">Happy Hacking</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[iOS百宝箱]]></title>
      <url>http://lavender1026.github.io/2016/01/17/iOS%E7%99%BE%E5%AE%9D%E7%AE%B1/</url>
      <content type="html"><![CDATA[<h1 id="iOS百宝箱"><a href="#iOS百宝箱" class="headerlink" title="iOS百宝箱"></a>iOS百宝箱</h1><p>自己总结了一下iOS开发中读过的书，用过的软件，开发中常用的框架插件以及github上优质的DEMO</p>
<h3 id="入门视频推荐"><a href="#入门视频推荐" class="headerlink" title="入门视频推荐"></a>入门视频推荐</h3><p>   <a href="http://pan.baidu.com/s/1cHnl2u" target="_blank" rel="external">算法与数据结构</a>密码: bhhi          </p>
<p>   <a href="http://open.163.com/special/opencourse/ios8.html" target="_blank" rel="external">斯坦福大学公开课iOS8全12集</a>  </p>
<p>   <a href="https://itunes.apple.com/cn/course/developing-ios-9-apps-swift/id1104579961" target="_blank" rel="external">斯坦福大学公开课iOS9Swift版</a> 没字幕，白胡子老爷爷的视频，适合英语水平不错的童鞋<br><a id="more"></a></p>
<h2 id="推荐读物"><a href="#推荐读物" class="headerlink" title="推荐读物"></a>推荐读物</h2><p><strong>建议富裕的童鞋还是购买纸质书，支持正版ORZ</strong></p>
<hr>
<table>
<thead>
<tr>
<th>书名</th>
<th>作者</th>
<th>推荐理由</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="http://pan.baidu.com/s/1hsyKkFM" target="_blank" rel="external">iOS开发进阶</a></td>
<td>唐巧</td>
<td>巧大经典之作，适合入门开发  暗号：t6g7</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1eSI1dmy" target="_blank" rel="external">iOS应用逆向工程</a></td>
<td>沙梓社，吴航</td>
<td>一本从逆向思维着手研究APP的书，很有意思 暗号：r3vb</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1nvOsyFZ" target="_blank" rel="external">iOS应用安全攻防实战</a></td>
<td>Jonathan Zdziarski</td>
<td>掌握iOS应用攻防思路和技巧，了解攻防两端思路，<br>有助于开发者以不变应万变 暗号：4ivs</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1slUVQRb" target="_blank" rel="external">Effective Objective-C 2.0</a></td>
<td>Matt Galloway</td>
<td>适合有一点实战经验的coder补充知识，翻译略有出入 暗号：daar</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1qXPXWGs" target="_blank" rel="external">剑指offer 名企面试官精讲典型编程题</a></td>
<td>何海涛</td>
<td>应届生面试必备，刷题宝典 暗号：gp5a</td>
</tr>
</tbody>
</table>
<h2 id="常用必备软件"><a href="#常用必备软件" class="headerlink" title="常用必备软件"></a>常用必备软件</h2><p><strong>没有链接的均是可以从AppStore下载的</strong></p>
<hr>
<table>
<thead>
<tr>
<th>名称</th>
<th>推荐理由</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://www.sourcetreeapp.com/" target="_blank" rel="external">SourceTree</a></td>
<td>git桌面化管理工具，免费方便简单实用</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1c2hXvGG" target="_blank" rel="external">Reveal</a></td>
<td>分析View结构层次利器 配合越狱手机更佳 暗号：e96s</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1o8eVgmA" target="_blank" rel="external">snip</a></td>
<td>截图软件 暗号:n8m2</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1mhT3RIC" target="_blank" rel="external">licecap</a></td>
<td>gif动图截图工具 暗号：k3ee</td>
</tr>
<tr>
<td><a href="http://zh.mweb.im/" target="_blank" rel="external">MWeb Lite</a></td>
<td>国人出品 Markdown 写作工具</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1pKE4F1L" target="_blank" rel="external">Flux</a></td>
<td>护眼神器，屏幕暖色调跟随地区时间变化颜色 暗号：t1wq</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1qYvMaQw" target="_blank" rel="external">ShadowsocksX</a></td>
<td>翻墙利器  网速稳定收费合理 暗号：8rkh<br> <a href="http://www.ishadowsocks.net" target="_blank" rel="external">体验账号</a> 6小时换一次密码</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1jI6hA4Y" target="_blank" rel="external">CleanMyMac3</a></td>
<td>清理电脑必备 暗号:87tv（记得把xcode设为白名单）</td>
</tr>
<tr>
<td><a href="http://music.163.com/#/download" target="_blank" rel="external">网易云音乐</a></td>
<td>深夜听歌敲代码，快乐似神仙 (关注<a href="http://music.163.com/#/playlist?id=315962089" target="_blank" rel="external">Dirk丶Chen</a>有惊喜）</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1slxLQep" target="_blank" rel="external">CocoaPods</a></td>
<td>新出的CocoaPods 界面化工具 暗号：njip</td>
</tr>
<tr>
<td><a href="http://pan.baidu.com/s/1gf79EdP" target="_blank" rel="external">ALfred2.8</a></td>
<td>十分好用的搜索工具 暗号:4u8q</td>
</tr>
<tr>
<td><a href="">Charles</a></td>
<td>常用抓包工具</td>
</tr>
<tr>
<td>Xmind</td>
<td>制作思维导图神器 </td>
</tr>
<tr>
<td>dash</td>
<td>看官方文档必备工具，方便快捷<a href="http://pan.baidu.com/s/1c2z8pWk" target="_blank" rel="external">官方文档</a>暗号：2t8w</td>
</tr>
</tbody>
</table>
<h2 id="常用第三方框架"><a href="#常用第三方框架" class="headerlink" title="常用第三方框架"></a>常用第三方框架</h2><table>
<thead>
<tr>
<th>名称</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td>AFNetworking</td>
<td>网络必备</td>
</tr>
<tr>
<td>Masonry</td>
<td>Autolayout手写库TOP1，没有之一</td>
</tr>
<tr>
<td>SnapKit</td>
<td>Autolayout手写库Swift版</td>
</tr>
<tr>
<td>YYkit系列</td>
<td>包含YYImage YYModel YYCache 等一堆超级好用的框架 。强烈推荐给大家</td>
</tr>
<tr>
<td>SDWebImage</td>
<td>图片异步下载以及缓存管理</td>
</tr>
<tr>
<td>MBProgressHUD</td>
<td>常用HUD组件</td>
</tr>
<tr>
<td>SVProgressHUD</td>
<td>常用HUD组件，个人推荐</td>
</tr>
<tr>
<td>MJRefresh</td>
<td>好用的下拉刷新 十分好用</td>
</tr>
<tr>
<td>JSPatch</td>
<td>为项目动态添加模块，或替换项目原生代码动态修复 bug</td>
</tr>
<tr>
<td><a href="https://realm.io/" target="_blank" rel="external">Realm</a></td>
<td>十分强大的一个数据库</td>
</tr>
<tr>
<td>ReactiveCocoa</td>
<td>大名鼎鼎的RAC 目前还没接触到，但是很流弊</td>
</tr>
</tbody>
</table>
<h2 id="常用Xcode插件"><a href="#常用Xcode插件" class="headerlink" title="常用Xcode插件"></a>常用Xcode插件</h2><p>建议先从github上下载Alcatraz安装，然后从Alcatraz中安装其他插件</p>
<hr>
<table>
<thead>
<tr>
<th>名称</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/alcatraz/Alcatraz" target="_blank" rel="external">Alcatraz</a></td>
<td>xcode插件管理工具</td>
</tr>
<tr>
<td>CocoaPods</td>
<td>第三方框架管理工具</td>
</tr>
<tr>
<td>Backlight</td>
<td>当前编辑代码行显示高亮可自定义颜色</td>
</tr>
<tr>
<td>BBUDebuggerTuckAway</td>
<td>当编辑代码时自动隐藏bug栏简单实用</td>
</tr>
<tr>
<td>FuzzyAutocomplete</td>
<td>智能模糊联想函数方法名称</td>
</tr>
<tr>
<td>KSImageNamed</td>
<td>图片名称自动填写显示对应图片，方便快捷</td>
</tr>
<tr>
<td>VVDocumenter</td>
<td>不多说，喵神大作。帮助你快速编写符合规范的注释</td>
</tr>
<tr>
<td>XAlign</td>
<td>很好用的格式自动对齐插件</td>
</tr>
</tbody>
</table>
<h2 id="优质DEMO"><a href="#优质DEMO" class="headerlink" title="优质DEMO"></a>优质DEMO</h2><table>
<thead>
<tr>
<th>名称</th>
<th>简介</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/mogujie/TeamTalk" target="_blank" rel="external">TeamTalk</a></td>
<td>蘑菇街. 开源IM. 电商强烈推荐.</td>
</tr>
<tr>
<td><a href="https://github.com/meilbn/MyOne-iOS" target="_blank" rel="external">MyOne-iOS</a></td>
<td>用OC写的《一个》 iOS 客户端</td>
</tr>
<tr>
<td><a href="https://github.com/jiachenmu/Swift-BanTang" target="_blank" rel="external">IOS-Swift2.0</a></td>
<td>高仿半糖App </td>
</tr>
<tr>
<td><a href="https://github.com/lookingstars/meituan" target="_blank" rel="external">高仿美团iOS</a></td>
<td>高仿美团</td>
</tr>
<tr>
<td><a href="https://github.com/CatchChat/Yep" target="_blank" rel="external">Yep.swift</a></td>
<td>Yep 一个由天才开发给天才们使用的社交软件。</td>
</tr>
<tr>
<td><a href="https://github.com/renzifeng/ZFPlayer" target="_blank" rel="external">ZFPlayer</a></td>
<td>基于AVPlayer，支持横屏、竖屏，上下滑动调节音量、屏幕亮度，左右滑动调节播放进度</td>
</tr>
<tr>
<td><a href="https://github.com/ZhongTaoTian/LoveFreshBeen" target="_blank" rel="external">高仿爱鲜蜂</a></td>
<td>高仿爱鲜蜂 - Swift2.0</td>
</tr>
<tr>
<td><a href="https://github.com/callmejoejoe/XCFApp" target="_blank" rel="external">高仿下厨房</a></td>
<td>高仿下厨房</td>
</tr>
<tr>
<td><a href="https://github.com/singer1026/DMHeartFlyAnimation" target="_blank" rel="external">直播APP点赞</a></td>
<td>直播app点赞功能</td>
</tr>
</tbody>
</table>
<p><a href="https://github.com/jiecao-fm/SwiftTheme" target="_blank" rel="external">主题换肤</a></p>
<h2 id="优质学习链接"><a href="#优质学习链接" class="headerlink" title="优质学习链接"></a>优质学习链接</h2><table>
<thead>
<tr>
<th>名称</th>
<th>推荐理由</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="https://github.com/ChenYilong/iOSInterviewQuestions" target="_blank" rel="external">iOS面试题集锦</a></td>
<td>共有55道题，题目都是质量很高的面试题</td>
</tr>
<tr>
<td><a href="http://lib.csdn.net/base/31?source=blogtop" target="_blank" rel="external">CSDN算法与数据结构知识库</a></td>
<td>自学算法和数据结构，知识面涵盖广泛</td>
</tr>
<tr>
<td><a href="http://coolshell.cn/articles/5426.html?plg_nld=1&amp;plg_uin=1&amp;plg_auth=1&amp;plg_nld=1&amp;plg_usr=1&amp;plg_vkey=1&amp;plg_dev=1" target="_blank" rel="external">VIM练级攻略</a></td>
<td>自学VIM简明教程</td>
</tr>
</tbody>
</table>
<p>转载请注明出处！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[搭建博客那些事]]></title>
      <url>http://lavender1026.github.io/2016/01/15/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
      <content type="html"><![CDATA[<p>很久之前就想把博客从CSDN上迁移过来，只是一直没有时间，最近比较闲就用hexo+git搭建了博客。<br>网上有很多教程都不是很仔细，搭建博客的时候总有意想不到的问题，昨天捣鼓了许久，踩了很多坑。写下这篇博客来帮助一下更多的人。主要是针对几个坑来帮助一下大家</p>
<h2 id="博客的搭建"><a href="#博客的搭建" class="headerlink" title="博客的搭建"></a>博客的搭建</h2><p>博客的基本搭建可以参考这个<a href="http://www.jianshu.com/p/4eaddcbe4d12" target="_blank" rel="external">5分钟 搭建免费个人博客</a>教程。<br>讲解的十分详细<br><a id="more"></a></p>
<p>针对几个hexo 命令<br><img src="http://7xuf0o.com1.z0.glb.clouddn.com/Snip20160523_2.png" alt=""><br>报的原因是因为没有获取权限 ，如果你的机器有密码，一般 都要 前面加上sudo 即可<br>而上文中的一个常用的命令</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure>
<p>也应该改成</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo hexo clean &amp;&amp; sudo hexo g &amp;&amp;  sudo hexo d</span><br></pre></td></tr></table></figure>
<p>好了。基本上看到这里，前面的搭建已经做完。推荐的主题<a href="http://theme-next.iissnan.com/getting-started.html#theme-settings" target="_blank" rel="external">NEXT</a>，按照步骤来基本上没有什么难度。</p>
<h2 id="域名"><a href="#域名" class="headerlink" title="域名"></a>域名</h2><p>现在就可以去买一个域名链接上你的git仓库，我推荐去<a href="https://www.aliyun.com/" target="_blank" rel="external">阿里云</a>买,方便快捷好管理。<br><br>买完了以后，点击进入控制台<img src="http://7xuf0o.com1.z0.glb.clouddn.com/Snip20160523_3.png" alt="">，直接点击解析，然后按照这个方法进行设置<img src="http://7xuf0o.com1.z0.glb.clouddn.com/Snip20160523_4.png" alt=""><br>注意，并不需要修改万网的DNS，CNAME A指向的git的IP<br>git的IP</p>
<blockquote>
<p>192.30.252.153<br>192.30.252.154</p>
</blockquote>
<p> 随意填写一个或者两个都填也可以<br> 然后回到你的github <img src="" alt="">点击这里创建一个名为CNAME的文件，内容填写你买的域名<br> 然后下载下来，将刚刚创建的CNAME放到博客文件夹的source中 从新执行一下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d -g</span><br></pre></td></tr></table></figure>
<p>然后去浏览器里输入你的域名吧~~</p>
<h2 id="评论"><a href="#评论" class="headerlink" title="评论"></a>评论</h2><p>评论我是用的DISQUS，DISQUS注册完了以后，点击STARTED进行注册<img src="http://7xuf0o.com1.z0.glb.clouddn.com/Snip20160523_10.png" alt=""><br> 只后会跳转到这个页面<br> <img src="http://7xuf0o.com1.z0.glb.clouddn.com/Snip20160523_5.png" alt=""><br> 注意Category填写Tech<br>填写完毕，跳到<img src="http://7xuf0o.com1.z0.glb.clouddn.com/Snip20160523_9.png" alt=""><br>这里可以不用管setting up 直接点右边的personal site 之后的设置可以设置为默认选项，点完以后选择左边的General<br><img src="http://7xuf0o.com1.z0.glb.clouddn.com/Snip20160523_13.png" alt="">Website URL一栏填写你购买的域名，下面的language选中Chinese即可</p>
<h2 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h2><p>最后如果你想添加图片，可以用图床来存储。这里建议使用<a href="http://www.qiniu.com/" target="_blank" rel="external">七牛</a>这里需要注意，采用七牛进行图床，建立一个空间的时候记得建成为公共空间，否则无法获取到外链地址。</p>
<h2 id="发布博客"><a href="#发布博客" class="headerlink" title="发布博客"></a>发布博客</h2><p> 用markdown编辑工具新建一个.md 开头的格式</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:          #本片博客内容（记得冒号后面添加一个空格）</span><br><span class="line">date: 2016-01-15 22:41:52   #创建时间</span><br><span class="line">tags:   #标签</span><br><span class="line"> - 博客   </span><br><span class="line"> - </span><br><span class="line">categories: 杂记   #分类</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
<p>然后<br><code>hexo d -g</code></p>
<p>其他有什么补充的再说吧</p>
<p>转载请注明出处！</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Xcode小Tips]]></title>
      <url>http://lavender1026.github.io/2015/10/25/%E5%B0%8FTips/</url>
      <content type="html"><![CDATA[<p>整理一下自己开发过程中用到的小技巧小tips</p>
<p>1，打印View所有子视图</p>
<blockquote>
<p>po [[self view]recursiveDescription]</p>
</blockquote>
<p>2，layoutSubviews调用的调用时机</p>
<ul>
<li>当视图第一次显示的时候会被调用</li>
<li>当这个视图显示到屏幕上了,点击按钮</li>
<li>添加子视图也会调用这个方法</li>
<li>当本视图的大小发生改变的时候是会调用的</li>
<li>当子视图的frame发生改变的时候是会调用的</li>
<li>当删除子视图的时候是会调用的<a id="more"></a>
</li>
</ul>
<p>3，NSString过滤特殊字符<br>// 定义一个特殊字符的集合</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">NSCharacterSet *set = [NSCharacterSet characterSetWithCharactersInString:</span><br><span class="line">@&quot;@／：；（）¥「」＂、[]&#123;&#125;#%-*+=_\\|~＜＞$€^•&apos;@#$%^&amp;*()_+&apos;\&quot;&quot;];</span><br></pre></td></tr></table></figure>
<p>// 过滤字符串的特殊字符</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NSString *newString = [trimString stringByTrimmingCharactersInSet:set];</span><br></pre></td></tr></table></figure>
<p>4，TransForm属性<br>//平移按钮</p>
<blockquote>
<p>CGAffineTransform transForm = self.buttonView.transform;<br>self.buttonView.transform = CGAffineTransformTranslate(transForm, 10, 0);</p>
</blockquote>
<p>//旋转按钮</p>
<blockquote>
<p>CGAffineTransform transForm = self.buttonView.transform;<br>self.buttonView.transform = CGAffineTransformRotate(transForm, M_PI_4);</p>
</blockquote>
<p>//缩放按钮</p>
<blockquote>
<p>self.buttonView.transform = CGAffineTransformScale(transForm, 1.2, 1.2);</p>
</blockquote>
<p>//初始化复位</p>
<blockquote>
<p>self.buttonView.transform = CGAffineTransformIdentity;</p>
</blockquote>
<p>5，去掉分割线多余15像素<br>首先在viewDidLoad方法加入以下代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> if ([self.tableView respondsToSelector:@selector(setSeparatorInset:)]) &#123;</span><br><span class="line">        [self.tableView setSeparatorInset:UIEdgeInsetsZero];    </span><br><span class="line">&#125;   </span><br><span class="line"> if ([self.tableView respondsToSelector:@selector(setLayoutMargins:)]) &#123;        </span><br><span class="line">        [self.tableView setLayoutMargins:UIEdgeInsetsZero];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>然后在重写willDisplayCell方法</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell </span><br><span class="line">forRowAtIndexPath:(NSIndexPath *)indexPath&#123;   </span><br><span class="line">    if ([cell respondsToSelector:@selector(setSeparatorInset:)]) &#123;       </span><br><span class="line">             [cell setSeparatorInset:UIEdgeInsetsZero];    </span><br><span class="line">    &#125;    </span><br><span class="line">    if ([cell respondsToSelector:@selector(setLayoutMargins:)]) &#123;        </span><br><span class="line">             [cell setLayoutMargins:UIEdgeInsetsZero];    </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>6，计算方法耗时时间间隔<br>// 获取时间间隔</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#define TICK   CFAbsoluteTime start = CFAbsoluteTimeGetCurrent();</span><br><span class="line">#define TOCK   NSLog(@&quot;Time: %f&quot;, CFAbsoluteTimeGetCurrent() - start)</span><br></pre></td></tr></table></figure>
<p>7，Color颜色宏定义</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// 随机颜色</span><br><span class="line">#define RANDOM_COLOR [UIColor colorWithRed:arc4random_uniform(256) / 255.0 green:arc4random_uniform(256) / 255.0 blue:arc4random_uniform(256) / 255.0 alpha:1]</span><br><span class="line">// 颜色(RGB)</span><br><span class="line">#define RGBCOLOR(r, g, b) [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:</span><br><span class="line">(b)/255.0f alpha:1]</span><br><span class="line">// 利用这种方法设置颜色和透明值，可不影响子视图背景色</span><br><span class="line">#define RGBACOLOR(r, g, b, a) [UIColor colorWithRed:(r)/255.0f green:(g)/255.0f blue:(b)/255.0f alpha:(a)]</span><br></pre></td></tr></table></figure>
<p>8，Alert提示宏定义</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#define Alert(_S_, ...) [[[UIAlertView alloc] initWithTitle:@&quot;提示&quot; message:[NSString stringWithFormat:(_S_), ##__VA_ARGS__] delegate:nil cancelButtonTitle:@&quot;确定&quot; otherButtonTitles:nil] show]</span><br></pre></td></tr></table></figure>
<p>9，让 iOS 应用直接退出</p>
<pre><code>- (void)exitApplication {
AppDelegate *app = [UIApplication sharedApplication].delegate;
UIWindow *window = app.window;

[UIView animateWithDuration:1.0f animations:^{
    window.alpha = 0;
} completion:^(BOOL finished) {
    exit(0);
}];}
</code></pre><p>10，NSArray 快速求总和 最大值 最小值 和 平均值</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">NSArray *array = [NSArray arrayWithObjects:@&quot;2.0&quot;, @&quot;2.3&quot;, @&quot;3.0&quot;, @&quot;4.0&quot;, @&quot;10&quot;, nil];</span><br><span class="line">CGFloat sum = [[array valueForKeyPath:@&quot;@sum.floatValue&quot;] floatValue];</span><br><span class="line">CGFloat avg = [[array valueForKeyPath:@&quot;@avg.floatValue&quot;] floatValue];</span><br><span class="line">CGFloat max =[[array valueForKeyPath:@&quot;@max.floatValue&quot;] floatValue];</span><br><span class="line">CGFloat min =[[array valueForKeyPath:@&quot;@min.floatValue&quot;] floatValue];</span><br><span class="line">NSLog(@&quot;%f\n%f\n%f\n%f&quot;,sum,avg,max,min);</span><br></pre></td></tr></table></figure>
<p>11，修改Label中不同文字颜色</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">- (void)touchesEnded:(NSSet&lt;UITouch *&gt; *)touches withEvent:(UIEvent *)event</span><br><span class="line">&#123;</span><br><span class="line">    [self editStringColor:self.label.text editStr:@&quot;好&quot; color:[UIColor blueColor]];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (void)editStringColor:(NSString *)string editStr:(NSString *)editStr color:(UIColor *)color &#123;</span><br><span class="line">    // string为整体字符串, editStr为需要修改的字符串</span><br><span class="line">    NSRange range = [string rangeOfString:editStr];</span><br><span class="line">	 NSMutableAttributedString *attribute = [[NSMutableAttributedString alloc] initWithString:string];</span><br><span class="line"></span><br><span class="line">    // 设置属性修改字体颜色UIColor与大小UIFont</span><br><span class="line">    [attribute addAttributes:@&#123;NSForegroundColorAttributeName:color&#125; range:range];</span><br><span class="line"></span><br><span class="line">    self.label.attributedText = attribute;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>12，播放声音</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#import&lt;AVFoundation/AVFoundation.h&gt;</span><br><span class="line">//  1.获取音效资源的路径</span><br><span class="line">   NSString *path = [[NSBundle mainBundle]pathForResource:@&quot;pour_milk&quot; ofType:@&quot;wav&quot;];</span><br><span class="line">   //  2.将路劲转化为url</span><br><span class="line">   NSURL *tempUrl = [NSURL fileURLWithPath:path];</span><br><span class="line">   //  3.用转化成的url创建一个播放器</span><br><span class="line">   NSError *error = nil;</span><br><span class="line">   AVAudioPlayer *play = [[AVAudioPlayer alloc]initWithContentsOfURL:tempUrl error:&amp;error];</span><br><span class="line">   self.player = play;</span><br><span class="line">   //  4.播放</span><br><span class="line">   [play play];</span><br></pre></td></tr></table></figure>
<p>13，检测是否IPad Pro</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">- (BOOL)isIpadPro</span><br><span class="line">&#123;   </span><br><span class="line">  UIScreen *Screen = [UIScreen mainScreen];   </span><br><span class="line">  CGFloat width = Screen.nativeBounds.size.width/Screen.nativeScale;  </span><br><span class="line">  CGFloat height = Screen.nativeBounds.size.height/Screen.nativeScale;         </span><br><span class="line">  BOOL isIpad =[[UIDevice currentDevice] userInterfaceIdiom] == UIUserInterfaceIdiomPad;   </span><br><span class="line">  BOOL hasIPadProWidth = fabs(width - 1024.f) &lt; DBL_EPSILON;    </span><br><span class="line">  BOOL hasIPadProHeight = fabs(height - 1366.f) &lt; DBL_EPSILON;  </span><br><span class="line">  return isIpad &amp;&amp; hasIPadProHeight &amp;&amp; hasIPadProWidth;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>14，修改Tabbar Item的属性</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 修改标题位置</span><br><span class="line">  self.tabBarItem.titlePositionAdjustment = UIOffsetMake(0, -10);</span><br><span class="line"> // 修改图片位置</span><br><span class="line">  self.tabBarItem.imageInsets = UIEdgeInsetsMake(-3, 0, 3, 0);</span><br><span class="line"></span><br><span class="line"> // 批量修改属性</span><br><span class="line">  for (UIBarItem *item in self.tabBarController.tabBar.items) &#123;</span><br><span class="line">      [item setTitleTextAttributes:[NSDictionary dictionaryWithObjectsAndKeys:</span><br><span class="line">               [UIFont fontWithName:@&quot;Helvetica&quot; size:19.0], NSFontAttributeName, nil]</span><br><span class="line">                          forState:UIControlStateNormal];</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> // 设置选中和未选中字体颜色</span><br><span class="line"> [[UITabBar appearance] setShadowImage:[[UIImage alloc] init]];</span><br><span class="line"></span><br><span class="line"> //未选中字体颜色</span><br><span class="line"> [[UITabBarItem appearance] setTitleTextAttributes:@&#123;NSForegroundColorAttributeName:[UIColor greenColor]&#125; forState:UIControlStateNormal];</span><br><span class="line"></span><br><span class="line"> //选中字体颜色</span><br><span class="line"> [[UITabBarItem appearance] setTitleTextAttributes:@&#123;NSForegroundColorAttributeName:[UIColor cyanColor]&#125; forState:UIControlStateSelected];</span><br></pre></td></tr></table></figure>
<p>15，NULL - nil - Nil - NSNULL的区别</p>
<ul>
<li><p>nil是OC的，空对象，地址指向空（0）的对象。对象的字面零值</p>
</li>
<li><p>Nil是Objective-C类的字面零值</p>
</li>
<li><p>NULL是C的，空地址，地址的数值是0，是个长整数</p>
</li>
<li><p>NSNull用于解决向NSArray和NSDictionary等集合中添加空值的问题</p>
</li>
</ul>
<p>16，去掉BackBarButtonItem的文字</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[[UIBarButtonItem appearance] setBackButtonTitlePositionAdjustment:UIOffsetMake(0, -60)forBarMetrics:UIBarMetricsDefault];</span><br></pre></td></tr></table></figure>
<p>17，控件不能交互的一些原因</p>
<blockquote>
<p>1，控件的userInteractionEnabled = NO<br>2，透明度小于等于0.01，aplpha<br>3，控件被隐藏的时候，hidden = YES<br>4，子视图的位置超出了父视图的有效范围，子视图无法交互，设置了。<br>5，需要交互的视图，被其他视图盖住（其他视图开启了用户交互）。</p>
</blockquote>
<p>18，修改UITextField中Placeholder的文字颜色</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[text setValue:[UIColor redColor] forKeyPath:@&quot;_placeholderLabel.textColor&quot;];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>19，视图的生命周期<br>1、 alloc 创建对象，分配空间<br>2、 init (initWithNibName) 初始化对象，初始化数据<br>3、 loadView 从nib载入视图 ，除非你没有使用xib文件创建视图<br>4、 viewDidLoad 载入完成，可以进行自定义数据以及动态创建其他控件<br>5、 viewWillAppear视图将出现在屏幕之前，马上这个视图就会被展现在屏幕上了<br>6、 viewDidAppear 视图已在屏幕上渲染完成</p>
<p>1、viewWillDisappear 视图将被从屏幕上移除之前执行<br>2、viewDidDisappear 视图已经被从屏幕上移除，用户看不到这个视图了<br>3、dealloc 视图被销毁，此处需要对你在init和viewDidLoad中创建的对象进行释放.</p>
<p>viewVillUnload－ 当内存过低，即将释放时调用；<br>viewDidUnload－当内存过低，释放一些不需要的视图时调用。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[分类与EXtension的前世今生]]></title>
      <url>http://lavender1026.github.io/2015/07/17/%E5%88%86%E7%B1%BB%E4%B8%8EEXtension%E7%9A%84%E5%89%8D%E4%B8%96%E4%BB%8A%E7%94%9F/</url>
      <content type="html"><![CDATA[<p>category &amp; extension</p>
<p>苹果推荐分类的使用<br>    •    1.给已经存在的类添加方法<br>    •    2.把类的实现分开在几个不同文件中<br>    ◦    减少单个文件的体积<br>    ◦    把不同功能组织到不同的category里<br>    ◦    多个开发者共同完成一个类<br>    ◦    按照需求加载想要的category<br>    •    3.声明私有方法<br>除此之外，我们还可以转换思想，将category使用到如下地方：<br>    •    4.模仿多继承<br>    •    5.把framework的私有方法分开<br>    <a id="more"></a></p>
<p>category和extension区别1<br>    •    category: 类别，分类<br>    ◦    专门用来给类添加新的方法<br>    ◦    不能给类添加成员属性，添加了成员变量，也无法取到<br>    ▪    注意：其实可以通过runtime给分类添加属性<br>    ◦    分类中用@property定义变量，只会生成变量的getter，setter方法的声明，不能生成方法实现和带下划线的成员变量。<br>    •    extension：类扩展<br>    ◦    可以说成是特殊的分类，也称作匿名分类<br>    ◦    可以给类添加成员属性，但是是私有变量<br>    ◦    可以给类添加方法，也是私有方法<br>category和extension区别2<br>虽然有人说extension是一个特殊的category，也有人将extension叫做匿名分类，但是其实两者差别很大。<br>    •    extension<br>    ◦    在编译器决议，是类的一部分，在编译器和头文件的@interface和实现文件里的@implement一起形成了一个完整的类。<br>    ◦    伴随着类的产生而产生，也随着类的消失而消失。<br>    ◦    extension一般用来隐藏类的私有消息，你必须有一个类的源码才能添加一个类的extension，所以对于系统一些类，如nsstring，就无法添加类扩展<br>    •    category<br>    ◦    是运行期决议的<br>    ◦    类扩展可以添加实例变量，分类不能添加实例变量<br>    ◦    原因：因为在运行期，对象的内存布局已经确定，如果添加实例变量会破坏类的内部布局，这对编译性语言是灾难性的。<br>category底层结构<br>我们知道，所有OC类和对象，在runtime层都是用struct表示的，category在runtime层使用结构体category_t定义的，包含了如下：<br>    •    name 类名<br>    •    cls 类<br>    •    instanceMethods 对象方法<br>    •    classMethods 类方法<br>    •    protocols 协议列表<br>    •    instanceProperties 添加的所有属性<br>category加载<br>在runtime，系统会将包含的内容添加如下：<br>    •    把category的实力方法，协议，已经属性添加到类上<br>    •    把类方法和协议添加到metaclass<br>分类加载和方法调用顺序<br>    •    加载：先加载原类的+load方法，再加载分类的+load方法，若多个分类，则根据编译顺序加载<br>    •    调用：先调用分类的方法，再调用原类的方法，分类方法会覆盖原类的方法<br>分类覆盖类的方法<br>如果分类中的方法与类的方法同名，则将会覆盖类的方法，实现原理：分类的对象方法会添加到类的方法列表中，分类的方法会添加到类的相应方法列表中（对象方法添加到类的方法列表，类方法会添加到metaclass列表），而且排列顺序会与原类的同名方法排在一起，且在原类的同名方法的前面。方法调用时会根据顺序先找到第一同名方法就调用，因此会覆盖原类的同名方法。<br>分类中添加成员属性<br>在runtime层面可以通过关联对象为分类添加成员属性</p>
]]></content>
    </entry>
    
  
  
</search>
